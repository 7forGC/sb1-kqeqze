rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    function isSignedIn() {
      return request.auth != null && request.auth.token.firebase.sign_in_provider != 'anonymous';
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isValidAppCheck() {
      return request.auth.token.app_check == true;
    }

    // User avatars
    match /avatars/{userId}/{fileName} {
      allow read: if true;
      allow write: if isSignedIn() && isOwner(userId) && isValidAppCheck();
    }
    
    // Media files
    match /media/{userId}/{fileName} {
      allow read: if isSignedIn() && isValidAppCheck();
      allow write: if isSignedIn() && isOwner(userId) && isValidAppCheck();
    }

    // Default deny
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}